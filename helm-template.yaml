---
# Source: frontend/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: adl-frontend
  labels:
    helm.sh/chart: frontend-1.0.0
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: adl
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: frontend/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: adl-frontend
  labels:
    helm.sh/chart: frontend-1.0.0
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: adl
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
      nodePort: 
  selector:
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: adl
---
# Source: frontend/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adl-frontend
  labels:
    helm.sh/chart: frontend-1.0.0
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: adl
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
      app.kubernetes.io/instance: adl
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend
        app.kubernetes.io/instance: adl
    spec:
      imagePullSecrets:
        name: regcred
      serviceAccountName: adl-frontend
      securityContext:
        {}
      containers:
        - name: frontend
          securityContext:
            {}
          image: "f73-g1.cloudogu.net/nexus/kassandra/adlis-frontend:1.0"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
          - name: APIPATH
            value: adl-api/v1/
          - name: APIUSER
            valueFrom:
              secretKeyRef:
                key: username
                name: basic-auth
          - name: APIPW
            valueFrom:
              secretKeyRef:
                key: password
                name: basic-auth
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: frontend/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: adl-frontend
  labels:
    helm.sh/chart: frontend-1.0.0
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: adl
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: ""
      http:
        paths:
          - path: /
            backend:
              serviceName: adl-frontend
              servicePort: 80
---
# Source: frontend/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "adl-frontend-test-connection"
  labels:
    helm.sh/chart: frontend-1.0.0
    app.kubernetes.io/name: frontend
    app.kubernetes.io/instance: adl
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['adl-frontend:80']
  restartPolicy: Never
